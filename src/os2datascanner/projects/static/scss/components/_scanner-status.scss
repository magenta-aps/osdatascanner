.scanner-status {
  background-color: var(--color-widget-bg);
  box-shadow: var(--box-shadow-widget);
  border-radius: var(--border-radius-widget);
  padding: 2rem;
  margin-bottom: 2rem;

  .title {
    font-size: 1.25rem;
    font-weight: 600;
  }
}

.datatable .scan-stage {
  position: relative;
  // padding-left: 4rem;
}

// Note to the rules below: While dimensions and positioning (width, height,
// padding, left, top, transform-origin) and colors (background-color)
// would ideally be expressed via var(--some-var) in the pseudo classes below,
// IE11 seems to combine var() expressions for ::before and ::after, resulting
// in the latter overriding the former. Therefore we resort to raw values below.

// .datatable .scan-stage::before,
// .datatable .stage-1::after,
// .datatable .stage-2::after {
//   content: "";
//   display: block;
//   position: absolute;
//   left: 1rem; // var(--datatable-cell-padding) / 2
//   top: 2rem; // var(--datatable-cell-padding)
//   vertical-align: middle;
//   height: 2rem; // var(--datatable-cell-padding)
// }

.datatable .stage-0::before {
  width: .25rem; // var(--datatable-cell-padding) / 8
  background-color: var(--color-primary);
  left: 1.875rem; // var(--datatable-cell-padding) / 8 * 3.5 + var(--datatable-cell-padding)
  animation: rotate 5s infinite linear;
  transform-origin: .125rem center; // var(--datatable-cell-padding) / 16
}

// .datatable .stage-1::before,
// .datatable .stage-2::before {
//   width: .25rem; // var(--datatable-cell-padding) / 8
//   animation: pan 2.5s infinite alternate linear;
//   z-index: 1;
// }

.datatable .stage-1::before {
  background-color: var(--color-primary); // we can keep this var() as the accompanying ::after element does not have a var() background-color
}

// .datatable .stage-2::before {
//   background-color: var(--color-primary-dark); // we can keep this var() as the accompanying ::after element does not have a var() background-color
//   animation-direction: alternate-reverse;
// }

// .datatable .stage-1::after,
// .datatable .stage-2::after {
//   z-index: 0;
//   width: 2rem; // var(--datatable-cell-padding)
//   height: 1rem; // var(--datatable-cell-padding) / 2
//   top: 2.5rem; // var(--datatable-cell-padding) * 1.25
// }

.datatable .stage-1::after {
  background-color: #d0d0d0;
}

// .datatable .stage-2::after {
//   background-color: #5ca4cd; // var(--color-primary-light)
// }

@keyframes rotate {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(180deg);
  }
}

@keyframes pan {
  0% {
    transform: translate(.25rem, 0); // var(--datatable-cell-padding) / 8
  }

  100% {
    transform: translate(1.5rem, 0); // var(--datatable-cell-padding) / 8 * 6
  }
}

// @media (prefers-reduced-motion) {
//   .datatable .scan-stage::before {
//     animation-duration: 20s !important;
//   }
// }

.scan-time {
  color: var(--color-text-secondary);
  font-size: 1rem;
  margin-bottom: .5rem;

  &--bullet {
    margin-left: .5rem;
  }

  &--blue {
    color: var(--color-primary-dark);
    font-weight: bold;
    margin-left: .5rem;
  }

  &--width {
    margin-left: .5rem;
  }
}

.error {
  color: red;

  &:last-child {
    margin-bottom: 0;
  }
}

// Completed icon
.completed_icon {
  display: flex;
  align-items: center;
  justify-content: flex-start;

  svg {
    fill: var(--color-checkmark);
  }

  .width {
    margin-left: .5rem;
  }
}

.progressbar-container {
  height: 10px;
  width: 80%;
  margin-bottom: 20px;
  margin-top: 10px;
  overflow: hidden;
  background-color: var(--color-widget-bg);
  border-radius: 4px;
  box-shadow: inset 0 1px 2px rgba(0, 0, 0, .1);
}

.progressbar {
  float: left;
  width: 0%;
  height: 100%;
  font-size: 12px;
  line-height: 20px;
  color: #fff;
  text-align: center;
  background-color: var(--color-primary);
  -webkit-box-shadow: inset 0 -1px 0 rgba(0, 0, 0, .15);
  box-shadow: inset 0 -1px 0 rgba(0, 0, 0, .15);
  -webkit-transition: width .5s linear;
  -o-transition: width .5s linear;
  transition: width .5s linear;
}
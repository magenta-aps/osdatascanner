.form {
  line-height: 1;

  .iframe-modal & {
    max-width: none;
    width: 100%;
  }

  fieldset,
  &__fieldset {
    border: none;

    h3 {
      margin: 0 0 2em;
    }
  }

  &__fieldset {
    max-width: 65rem;
  }

  .form__group {
    display: block;

    &--flex {
      display: flex;
      flex-wrap: wrap;
      align-items: flex-end;

      .block {
        flex: 0 0 100%;
      }

      .grow {
        flex: 1 0 auto;
      }

      .shrink {
        flex: 0 1 auto;
      }
    }
  }

  .form__group+.form__group {
    margin-top: 1rem;
  }

  legend,
  &__legend {
    font-size: 2rem;
    font-weight: 700;
    margin-bottom: 1rem;
    text-align: left;
  }

  label {
    display: block;
    font-size: 0.75em;
    user-select: none;
    color: var(--color-text-main);
  }

  label+input,
  label+.input-group {
    margin-top: 0.25rem;
  }

  input+label,
  select+label {
    margin-top: 1rem;
  }

  .form__group+.form__group,
  .form__group+.form__error,
  .form__error+.form__group {
    margin-top: 1rem;
  }

  input[type=checkbox]+label {
    display: flex;
  }

  // input [type=text],[type=password]
  input[type=text],
  input[type=password] {
    background-color: #fff;
    border: none;
    border-radius: var(--border-radius-small);
    box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.1);
    font-size: 1rem;
    line-height: 1;
    outline: none;
    padding: .75rem;
    transition: var(--transition-default);
    width: 100%;
  }

  input[type=text]:focus,
  input[type=password]:focus {
    box-shadow: inset 0 0 0 4px #5ca4cd40;
  }

  select {
    display: block;
    font-size: 1em;
    font-family: inherit;
    font-weight: normal;
    cursor: pointer;
    color: var(--color-text-main);
    padding: .75rem 2.25rem .75rem .75rem;
    width: 100%;
    max-width: 100%;
    /* useful when width is set to anything other than 100% */
    box-sizing: border-box;
    margin: 0;
    border: none !important;
    box-shadow: inset 0 0 0 1px rgba(0, 0, 0, .1);
    border-radius: 0;
    -moz-appearance: none;
    -webkit-appearance: none;
    appearance: none;
    background-color: var(--color-widget-bg);
    /* note: bg image below uses 2 urls. The first is an svg data uri for the arrow icon, and the second is the gradient. 
  		for the icon, if you want to change the color, be sure to use `%23` instead of `#`, since it's a url. You can also swap in a different svg icon or an external image reference
  		
  	*/
    background-image: url('../svg/chevron-down.svg'),
      linear-gradient(to bottom, var(--color-widget-bg) 0%, var(--color-widget-bg) 100%);
    background-repeat: no-repeat, repeat;
    /* arrow icon position (.75rem from the right, 50% vertical) , then gradient position*/
    background-position: right .75rem top 50%, 0 0;
    /* icon size, then gradient */
    background-size: .75rem auto, 100%;
    transition: var(--transition-default);
  }

  input:disabled:hover,
  select:disabled:hover {
    cursor: not-allowed;
  }

  // date widget
  .date {
    margin-top: 1rem;
  }

  .date-field {
    background-color: #fff;
    border: none;
    border-radius: var(--border-radius-small);
    box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.1);
    font-size: 1rem;
    line-height: 1;
    outline: none;
    padding: .75rem;
    transition: var(--transition-default);
    width: 90%;

    &:focus {
      box-shadow: inset 0 0 0 4px #5ca4cd40;
    }
  }

  // textarea
  textarea {
    background-color: #fff;
    border: 1px solid rgba(0, 0, 0, 0.1);
    border-radius: var(--border-radius-small);
    box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.1);
    min-height: 10rem;
    width: 100%;
    padding: .75rem;
    line-height: 1.5;
    resize: vertical;
  }

  textarea:focus {
    box-shadow: inset 0 0 0 4px #5ca4cd40;
    outline: none;
  }

  // radio button
  .radio-content {
    display: flex;
    align-items: flex-start;
    width: 100%;
  }

  .radio {
    display: grid;
    grid-template-columns: min-content auto;
    grid-gap: .5rem;
    font-size: .9rem;
    color: var(--color-text-main);
    margin-right: 5rem;
    cursor: pointer;
  }

  .radio__label {
    line-height: 1.1;
    opacity: 0.8;
  }

  .radio__input {
    display: flex;

    input {
      opacity: 0;
      width: 0;
      height: 0;

      &:focus+.radio__control {

        &--notify {
          box-shadow: 0 0 0 0.05em #fff, 0 0 0.15em 0.1rem var(--color-notification);
        }

        &--critical {
          box-shadow: 0 0 0 0.05em #fff, 0 0 0.15em 0.1rem var(--color-error);
        }

        &--problem {
          box-shadow: 0 0 0 0.05em #fff, 0 0 0.15em 0.1rem var(--color-problem);
        }

        &--warning {
          box-shadow: 0 0 0 0.05em #fff, 0 0 0.15em 0.1rem var(--color-warning);
        }
      }
    }
  }

  .radio-before {
    .radio__control {
      display: grid;
      place-items: center;
    }

    input+.radio__control--notify::before {
      content: "";
      width: .5rem;
      height: .5rem;
      box-shadow: inset 0.5rem 0.5rem var(--color-notification);
      border-radius: 50%;
      transition: 180ms transform ease-in-out;
      transform: scale(0);
    }

    input+.radio__control--warning::before {
      content: "";
      width: .5rem;
      height: .5rem;
      box-shadow: inset 0.5rem 0.5rem var(--color-warning);
      border-radius: 50%;
      transition: 180ms transform ease-in-out;
      transform: scale(0);
    }

    input+.radio__control--problem::before {
      content: "";
      width: .5rem;
      height: .5rem;
      box-shadow: inset 0.5rem 0.5rem var(--color-problem);
      border-radius: 50%;
      transition: 180ms transform ease-in-out;
      transform: scale(0);
    }

    input+.radio__control--critical::before {
      content: "";
      width: .5rem;
      height: .5rem;
      box-shadow: inset 0.5rem 0.5rem var(--color-error);
      border-radius: 50%;
      transition: 180ms transform ease-in-out;
      transform: scale(0);
    }

    input:checked+.radio__control::before {
      transform: scale(1);
    }
  }

  .radio__control {
    display: block;
    width: 1rem;
    height: 1rem;
    border-radius: 50%;
    transform: translateY(-0.05em);

    &--notify {
      border: 0.15rem solid var(--color-notification);
    }

    &--critical {
      border: 0.15rem solid var(--color-error);
    }

    &--problem {
      border: 0.15rem solid var(--color-problem);
    }

    &--warning {
      border: 0.15rem solid var(--color-warning);
    }
  }

  // help text
  .help {
    margin-left: .5rem;
    width: 1rem;
  }

  .help-icon {
    position: relative;
    display: inline-block;
    background-image: url("../svg/question-circle.svg");
    width: .8rem;
    height: .8rem;
    background-size: 100% 100%;
    cursor: pointer;

    .helptext {
      visibility: hidden;
      min-width: 20rem;
      background-color: #000;
      color: #fff;
      text-align: center;
      border-radius: .35rem;
      padding: .5rem .5rem;
      position: absolute;
      top: 1rem;
      z-index: 15;
    }

    &:hover .helptext {
      visibility: visible;
    }
  }


  &__help-text {
    display: block;
    font-size: 0.75em;
    margin-top: 0.25rem;
    opacity: 0.75;

    &::before {
      color: var(--color-main);
      content: "\2191";
      line-height: 1;
      margin-right: 0.5em;
    }
  }
}

.required-form:after {
  content: " *";
  color: var(--color-text-main);
}

// checkbox
.checkbox-group {
  display: flex;
  margin: 0.5rem 0;
  overflow: hidden;
}

.ds-checkbox {
  line-height: 1.3;
  font-size: 1.2em;
  margin-right: 3em;

  input[type="checkbox"] {
    opacity: 0;
    position: absolute;
    z-index: -1;
  }

  input+label {
    cursor: pointer;
    padding-left: 1.75em;
    margin-top: 0;
  }

  input[type="checkbox"]+label {

    &::before,
    &::after {
      :root {
        --transition-property: opacity;
      }

      content: "";
      display: block;
      height: 1em;
      width: 1em;
      position: absolute;
      top: 0;
      left: 0;
      box-sizing: content-box;
      background-color: transparent;
      cursor: pointer;
      transition: var(--transition-default);
    }

    &::before {
      border: 2px solid rgba(0, 0, 0, 0.4);
      border-radius: 3px;
    }

    &::after {
      background-size: 90% auto;
      background-position: center;
      background-repeat: no-repeat;
      border: 2px solid transparent; // match alignment of ::before element
      background-image: url("../svg/done.svg");
      opacity: 0;
      transition: var(--transition-default);
    }
  }

  input[type=checkbox]:focus+label::before {
    border-color: #12496e;
  }

  &:hover {
    input[type="checkbox"]+label {
      &::before {
        border-color: #12496e;
      }
    }
  }

  input[type="checkbox"]:checked+label {
    &::before {
      background-color: #12496e;
      border-color: transparent;
    }

    &::after {
      opacity: 1;
    }
  }

  input[type="checkbox"]:disabled+label {
    opacity: 0.5;

    &::before {
      border: 2px solid rgba(0, 0, 0, 0.1);
    }
  }
}

.has-error {
  border-left: 5px solid var(--color-error);
  padding-left: 1rem;

  .errorlist {
    color: var(--color-error);
    font-size: 0.75rem;
    list-style: none;
    margin: 0.5rem 0 0 0;

    li {
      margin-left: 0;
    }
  }
}

.has-warning {
  color: var(--color-warning-dark);
  border-left: 5px solid var(--color-warning-dark);
  padding-left: 1rem;

  li {
    margin-left: 0;
  }
}

.changed_rules {
  display: none;
}

#upload-file,
#upload-file-service,
#upload-file-email {
  padding: .75rem;
  width: 50%;
  text-align: center;
  background-color: rgba(0, 0, 0, 0.1);
  background-color: #fff;
  border: none;
  border-radius: var(--border-radius-small);
  box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.1);
}

.fileUpload input.upload {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  right: 0;
  margin: 0;
  padding: 0;
  cursor: pointer;
  opacity: 0;
  filter: alpha(opacity=0);
}

.fileUpload+* {
  margin-left: .25rem;
}

.ui-resizable-handle {
  transform: translateY(-100%);
}

.form__error {
  background-color: var(--color-error);
  border: 1px solid var(--color-error);
  color: #fff;
  font-size: 0.75rem;
  line-height: 1.5;
  margin-top: 1rem;
  padding: 0.5rem;
}

.csv_export_wrapper {
  margin: 1rem;
}
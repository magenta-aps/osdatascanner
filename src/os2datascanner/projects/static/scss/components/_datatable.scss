:root {
  --datatable-cell-padding: 2em;
}

.datatable-wrapper {
  clear: both;

  &.sm,
  &.md,
  &.lg,
  &.xl {
    max-width: 100%;
    overflow-x: auto;
  }

  &.sm {
    >.datatable {
      min-width: 35rem;
    }
  }

  &.md {
    >.datatable {
      min-width: 45rem;
    }
  }

  &.lg {
    >.datatable {
      min-width: 55rem;
    }
  }

  &.xl {
    >.datatable {
      min-width: 75rem;
    }
  }

  &.card {
    box-shadow: var(--box-shadow-widget);
    border-radius: none;
    margin-bottom: 0;
    background-color: var(--color-widget-bg);

    @media (min-width: $break-lg) {
      margin-bottom: calc(2 * var(--datatable-cell-padding));
      border-radius: var(--border-radius-widget);
    }
  }

  &.sm.card,
  &.md.card,
  &.lg.card,
  &.xl.card {
    // use gradients to signify that the table is scrollable
    background-image:
      linear-gradient(to right, white var(--datatable-cell-padding), rgba(255, 255, 255, 0)),
      linear-gradient(to right, #22222244, rgba(255, 255, 255, 0)),
      linear-gradient(to left, white var(--datatable-cell-padding), rgba(255, 255, 255, 0)),
      linear-gradient(to left, #22222244, rgba(255, 255, 255, 0));
    background-repeat: no-repeat;
    background-position:
      left top,
      left top,
      100% 0,
      100% 0;
    background-size:
      calc(var(--datatable-cell-padding) * 4) 100%,
      var(--datatable-cell-padding) 100%,
      calc(var(--datatable-cell-padding) * 4) 100%,
      var(--datatable-cell-padding) 100%;
    background-attachment:
      local,
      scroll,
      local,
      scroll;

    &:focus {
      box-shadow: var(--box-shadow-widget), 0 0 0 3px var(--color-primary-light);
    }
  }
}

.datatable {
  border-collapse: separate;
  border-spacing: 0;
  table-layout: fixed;
  width: 100%;

  label {
    cursor: pointer;
  }

  .last-opened {
    opacity: .6;
  }

  &.disabled {
    pointer-events: none;
    opacity: .6;
  }

  .datatable {
    margin: calc(var(--datatable-cell-padding) * -1) 0;
  }

  .button-caret {
    background-color: transparent;

    .material-icons {
      pointer-events: none;
      color: #aaa;
      transition: var(--transition-default);
    }

    &:hover,
    &:focus {
      .material-icons {
        color: var(--color-primary-dark);
      }

      // Don't change the background of the caret button
      background-color: transparent;
    }

    &.up {
      .material-icons {
        transform: rotate(180deg);
      }
    }
  }

  tr.open>td,
  tr.open>th {
    background-color: rgba(0, 0, 0, .07);
  }


  tr {

    td {
      transition: opacity 200ms ease-in-out;
    }

    &.soft-load.htmx-swapping td,
    &.soft-load.htmx-settling td {
      opacity: 0;
    }
  }

  .matches-list>td,
  .matches-list>th {
    background-color: rgba(0, 0, 0, .035);
  }

  tr.open>th:first-child,
  tr.open>td:first-child,
  .matches-list>th:first-child,
  .matches-list>td:first-child {
    // Emulate border-left. Adding an actual border-left will shift
    // the contents of the row
    box-shadow: inset 4px 0 0 var(--color-primary);
  }

  tr.highlighted>td,
  tr.highlighted>th,
  tr.highlighted+.matches-list>td,
  tr.highlighted+.matches-list>th {
    background-color: var(--color-primary-lightest);
  }

  &--wide {
    max-width: none;
  }

  &__column {
    &--checkbox {
      width: 4.2rem;
    }

    &--name {
      width: 100%;
      word-wrap: break-word;
      white-space: none;

      &>div {
        min-width: 12rem;
      }

      .stale-accounts {
        span {
          display: inline-block;
          margin: -1rem 0px;
          font-size: 1.4em;
          color: var(--color-text-main);
          bottom: -4px;
        }
      }
    }

    &--matchcount {
      width: 5.5rem;
      display: none;

      label {
        &::after {
          content: "#";
        }

        span {
          display: none;
        }
      }

      .withheld-matches {
        color: var(--color-text-secondary);
        margin-top: 0.5rem;

        &::after {
          content: ")"
        }

        &::before {
          content: "("
        }

        span {
          display: none;
        }
      }

      @media (min-width: $break-lg) {
        width: 15rem;

        label {
          &::after {
            content: none;
          }

          span {
            display: inline;
          }
        }

        .withheld-matches {
          span {
            display: inline;
          }
        }
      }
    }

    &--datasource_last_modified {
      width: 5.5rem;
      display: none;

      @media (min-width: $break-lg) {
        width: 11rem;
      }
    }

    &--org {
      width: 100%;
      word-wrap: break-word;
    }

    &--expression {
      width: 11rem;
    }

    &--sensitivity {
      width: 12rem;
    }

    &--drive {
      width: 6rem;
    }

    &--validated {
      width: 10rem;
    }

    &--automatic {
      width: 100%;
      max-width: 15rem;
      word-wrap: break-word;
    }

    &--source {
      width: 4.5rem;
      display: none;
    }

    &--path {
      width: 100%;
      word-wrap: break-word;
    }

    &--scan {
      width: 8rem;
      word-wrap: break-word;
    }

    &--starttime {
      width: 8rem;
    }

    &--status {
      width: 100%;
      word-wrap: break-word;
    }

    &--matchstatus {
      width: 12rem;
    }

    &--nodata {
      text-align: center;
      font-style: italic;
    }

    &--managers {
      width: 150%;
    }

    &--dpos {
      width: 150%;
    }

    &--actions {
      width: 15rem;
      word-wrap: break-word;

      form {
        display: inline-block;
      }

      .action-wrapper {
        display: inline;
        flex-wrap: wrap;
        margin: -.25rem 0 0 -.25rem;

        .button {
          margin: .25rem 0 0 .25rem;
        }

        >* {
          flex: 0 1 auto;
        }
      }
    }

    &--leader-actions {
      width: 16rem;
    }

    &--delete {
      width: 8.5rem;

      .button {
        margin: .25rem 0 0 .25rem;
      }

      >* {
        flex: 0 1 auto;
      }
    }

    &--info {
      width: 20rem;
    }

    &--objects {
      width: 15rem;
    }

    &--shortinfo {
      width: 35%;
    }

    &--btn {
      width: 28rem;
    }
  }

  .domain-url {
    text-overflow: ellipsis;
    word-break: break-all;
  }

  .scanner-url {
    margin-top: 0.5rem;
    font-size: small;
  }

  a:not(.button) {
    text-decoration: none;
    font-weight: 500;
    color: var(--color-primary);

    &:hover {
      color: var(--color-primary-dark);
    }
  }
}


@media (min-width: $break-sm) {

  col.datatable__column--matchcount,
  col.datatable__column--datasource_last_modified,
  col.datatable__column--source {
    display: table-column;
  }

  td.datatable__column--matchcount,
  th.datatable__column--matchcount,
  td.datatable__column--datasource_last_modified,
  th.datatable__column--datasource_last_modified,
  td.datatable__column--source,
  th.datatable__column--source {
    display: table-cell;
  }
}

@media (max-width: $break-lg) {

  col.datatable__column--datasource_last_modified,
  td.datatable__column--datasource_last_modified,
  th.datatable__column--datasource_last_modified {
    display: none;
  }
}

@media (min-width: $break-lg) {
  .datasource_last_modified-button {
    display: none;
  }
}

.compressed {
  --datatable-cell-padding: 1rem;
}

// probability,  start
.probability {
  display: inline-block;
  font-size: 0.75rem;
  font-weight: bold;
  border-radius: var(--border-radius-button);
  color: var(--color-text-white);
  text-align: center;
  width: 3.5rem;
  padding: 0.5rem;
  margin: -.6rem 0;

  &--red {
    background-color: var(--color-error);
  }

  &--orange {
    background-color: var(--color-problem);
  }

  &--green {
    background-color: var(--color-ok-dark);
  }
}

.datatable th,
.datatable td {
  line-height: normal; // prevent y-overflow
  padding: var(--datatable-cell-padding) calc(var(--datatable-cell-padding) / 2);
  vertical-align: middle;

  &.loading {
    text-align: center;
    font-style: italic;
  }

  .overflow-ellipsis {

    .employee__fullname {
      font-weight: bold;
    }

    .employee__username {
      content: "";
      display: block;
      margin-top: 10px;
    }

    // Only show ellipsis on pc-screens.
    @media (min-width: $break-lg) {
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }
  }

  &:first-child {
    padding-left: var(--datatable-cell-padding);
  }

  &:last-child {
    padding-right: var(--datatable-cell-padding);
  }
}

.datatable.middle th,
.datatable.middle td {
  vertical-align: middle;
}

.datatable tr.error td {
  border-top: 0;
  padding-top: 0;
}

.datatable .column-headings th,
.datatable .topbar-stick th {
  position: static; // override aggressive position: relative; on * in _base.scss
}

.datatable .column-headings {
  z-index: 1;

  th {
    font-size: 1rem;
    font-weight: bold;
    padding-top: 1.5rem;
    padding-bottom: 1.5rem;
    z-index: 1;
    border-top: 1px solid rgba(0, 0, 0, 0.2);
    background-color: #f4f4f4;
    white-space: nowrap;
    top: calc(2rem + var(--size-logo-height) + 12rem); // for sticky purposes; header height + row height of 9rem

    @media (min-width: $break-sm) {
      top: calc(2rem + var(--size-logo-height) + 9rem); // for sticky purposes; header height + row height of 9rem
    }

    @media (min-width: $break-md) {
      top: calc(2rem + var(--size-logo-height) + 6rem); // for sticky purposes; header height + row height of 6rem
    }

    @media (min-width: $break-lg) {
      top: 6rem; // for sticky purposes
    }
  }
}

.datatable .topbar-stick {
  th {
    background-color: #fff;
    z-index: 2;
    top: calc(2rem + var(--size-logo-height)); // for sticky purposes; header height

    &:first-child {
      border-top-left-radius: var(--border-radius-widget);
    }

    &:last-child {
      border-top-right-radius: var(--border-radius-widget);
    }

    @media (min-width: $break-lg) {
      top: 0; // for sticky purposes
    }
  }
}

.datatable .sticky th {
  position: -webkit-sticky;
  position: sticky;
}

.datatable .stuck th {

  border-bottom: 1px solid rgba(0, 0, 0, 0.2);

  &:first-child {
    border-top-left-radius: 0;
  }

  &:last-child {
    border-top-right-radius: 0;
  }
}

.datatable td {
  border-top: 1px solid rgba(0, 0, 0, 0.2);
  transition: background-color 0.2s ease-in-out;
}

/* .datatable--click-rows, start */
.datatable--click-rows td {
  padding: 0;

  &:first-child {
    padding-left: inherit;
  }

  &:last-child {
    padding-right: inherit;
  }
}

.datatable--click-rows a {
  color: inherit;
  display: block;
  padding: 2rem;
  text-decoration: none;
}

/* .datatable--click-rows, stop */

/* Icons and text in datatable  */
.flex {
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
  margin-top: .5rem;

  &--icon {
    margin-top: -.25rem;
  }

  &--character {
    margin-top: 1.25rem;
    margin-left: 1rem;
    margin-right: .25rem;
  }

  &--bottom {
    margin-bottom: .25rem;
  }

  &--width {
    margin-right: .75rem;
    height: 1.2rem;
    max-width: 1.5rem;

    &--icon {
      height: auto;
      max-width: 1.5rem;
      color: #222222;
    }
  }

  svg {
    height: 100%;
    width: auto;
  }

  .btn-text {
    color: var(--color-text-main);
    font-weight: 400;

    &:hover {
      color: var(--color-text-main);
    }
  }

  .text {
    color: var(--color-text-secondary);
    font-size: .75rem;
    line-height: 1rem;
  }
}

/* expression in datatable  */
.code-grey {
  background-color: #e0e0e0;
  border: 1px solid rgba(0, 0, 0, 0.1);
  border-radius: var(--border-radius-button);
  padding: .5rem;
}

.scan {
  &__item-title {
    display: block;
  }

  &__item-meta {
    margin-top: var(--size-ds-unit);

    span {
      display: inline-block;
      font-size: 0.75rem;
      margin-right: 0.5rem;
      opacity: 0.75;
    }
  }
}

.text-align-right {
  text-align: right;
}

.dont-break-out {
  overflow-wrap: break-word;
  word-wrap: break-word;

  -ms-word-break: break-all;
  word-break: break-all;
}


.matches-list {
  &__column {
    &--match {
      width: auto;
    }

    &--context {
      width: auto;
    }

    &--probability {
      width: 10%;
    }
  }
}

.match-context {

  &::before,
  &::after {
    content: "[...]";
    color: #aaa;
  }

  &::before {
    padding-right: .35em;
  }

  &::after {
    padding-left: .35em;
  }
}

.tooltip {
  &.cursor-help {
    cursor: help;
  }
}

[data-tooltip] {
  position: absolute;
  font-size: .85rem;
  padding: .25rem;
  border: 1px solid rgba(0, 0, 0, .2);
  border-radius: var(--border-radius-button);
  background-color: #f4f4f4;
  box-shadow: var(--box-shadow-filter);
  width: auto;
  white-space: nowrap;
  z-index: 9999;
  cursor: text;
}

.datatable tr.short td {
  padding-top: calc(var(--datatable-cell-padding) / 2);
  padding-bottom: calc(var(--datatable-cell-padding) / 2);
}

.datatable tr.warning {
  background-color: var(--color-warning);
}

.datatable tr.problem textarea[readonly=true] {
  width: 100%;
  padding: 1em;
}
:root {
  --datatable-cell-padding: 2em;
  --color-warning-light: #ffedb6;
}

.datatable-wrapper {
  clear: both;
  height: inherit;

  &.scrollable {
    overflow-y: scroll;
  }

  &.lg,
  &.xl {
    max-width: 100%;
    overflow-x: auto;
  }

  &.lg {
    > .datatable {
      min-width: 55rem;
    }
  }

  &.xl {
    > .datatable {
      min-width: 75rem;
    }
  }

  &.card {
    box-shadow: var(--box-shadow-widget);
    border-radius: none;
    margin-bottom: 0;
    background-color: var(--color-widget-bg);

    @media (min-width: $break-lg) {
      margin-bottom: calc(2 * var(--datatable-cell-padding));
      border-radius: var(--border-radius-widget);
    }
  }

  &.lg.card,
  &.xl.card {
    // use gradients to signify that the table is scrollable
    background-image: linear-gradient(
        to right,
        white var(--datatable-cell-padding),
        rgba(255, 255, 255, 0)
      ),
      linear-gradient(to right, #22222244, rgba(255, 255, 255, 0)),
      linear-gradient(
        to left,
        white var(--datatable-cell-padding),
        rgba(255, 255, 255, 0)
      ),
      linear-gradient(to left, #22222244, rgba(255, 255, 255, 0));
    background-repeat: no-repeat;
    background-position:
      left top,
      left top,
      100% 0,
      100% 0;
    background-size:
      calc(var(--datatable-cell-padding) * 4) 100%,
      var(--datatable-cell-padding) 100%,
      calc(var(--datatable-cell-padding) * 4) 100%,
      var(--datatable-cell-padding) 100%;
    background-attachment: local, scroll, local, scroll;

    &:focus {
      box-shadow:
        var(--box-shadow-widget),
        0 0 0 3px var(--color-primary-light);
    }
  }
}

.datatable {
  border-collapse: separate;
  border-spacing: 0;
  table-layout: fixed;
  width: 100%;

  label {
    cursor: pointer;
  }

  &.disabled {
    pointer-events: none;
    opacity: 0.6;
  }

  .datatable {
    margin: calc(var(--datatable-cell-padding) * -1) 0;
  }

  .button-caret {
    background-color: transparent;

    .material-icons {
      pointer-events: none;
      color: #aaa;
      transition: var(--transition-default);
    }

    &:hover,
    &:focus {
      .material-icons {
        color: var(--color-primary-dark);
      }

      // Don't change the background of the caret button
      background-color: transparent;
    }

    &.up {
      .material-icons {
        transform: rotate(180deg);
      }
    }
  }

  tr.open > td,
  tr.open > th {
    background-color: rgba(0, 0, 0, 0.07);
  }

  tr {
    td {
      transition: opacity 200ms ease-in-out;
    }

    &.soft-load.htmx-swapping td,
    &.soft-load.htmx-settling td {
      opacity: 0;
    }
  }

  tr {
    &.open,
    &.statistic_row {
      > :is(th, td):first-child {
        // Emulate border-left. Adding an actual border-left will shift
        // the contents of the row
        box-shadow: inset 4px 0 0 var(--color-primary);
      }
    }

    &.statistic_row {
      background-color: rgba(0, 0, 0, 0.035);
    }
  }

  tr.clickable {
    &:focus {
      background-color: var(--color-primary-lightest);
    }

    &:hover {
      background-color: var(--color-primary-dark);
      color: var(--color-primary-lightest);
      cursor: pointer;
    }
  }

  &__column {
    &--checkbox {
      /* Dependency: Admin > error log + system rules + scan completed */
      width: 4.2rem;
    }

    &--name {
      /* Dependency: 
        Admin > error log + rules + system rules + scan completed + scan status + account list
        Report > scannerjob list */
      width: 100%;
      word-wrap: break-word;
      white-space: none;

      & > div {
        min-width: 12rem;
      }
    }

    &--categories {
      /* Dependency: Admin > system rules */
      width: 100%;
    }

    &--matchcount {
      /* Dependency: Report > scannerjob list */
      width: 5.5rem;
      display: none;

      label {
        &::after {
          content: "#";
        }

        span {
          display: none;
        }
      }

      @media (min-width: $break-lg) {
        width: 15rem;

        label {
          &::after {
            content: none;
          }

          span {
            display: inline;
          }
        }
      }
    }

    &--org {
      /* Dependency: Admin > scan status + rules */
      width: 100%;
      word-wrap: break-word;
    }

    &--sensitivity {
      /* Dependency: Admin > system rules + rules */
      width: 12rem;
    }

    &--validated {
      /* Dependency: Admin > scan completed */
      width: 10rem;
    }

    &--automatic {
      /* Dependency: Admin > error log */
      width: 100%;
      max-width: 15rem;
      word-wrap: break-word;
    }

    &--source {
      /* Dependency: Report > scannerjob list */
      width: 4.5rem;
      display: none;
    }

    &--path {
      /* Dependency: Admin > error log */
      font-size: 0.875rem;
      width: 100%;
      word-wrap: break-word;
    }

    &--scan {
      /* Dependency: Admin > error log */
      width: 8rem;
      word-wrap: break-word;
    }

    &--starttime {
      /* Dependency: Admin > error log + scan completed */
      width: 8rem;
    }

    &--status {
      /* Dependency: Admin > scan completed */
      width: 100%;
      word-wrap: break-word;
    }

    &--nodata {
      /* Dependency: Report > scannerjob list */
      text-align: center;
      font-style: italic;
    }

    &--actions {
      /* Dependency: 
        Admin > error log + rules + scan status 
        Report > scannerjob list*/
      width: 15rem;
      word-wrap: break-word;

      form {
        display: inline-block;
      }
    }

    &--delete {
      /* Dependency: Admin > scan completed */
      width: 8.5rem;

      .button {
        margin: 0.25rem 0 0 0.25rem;
      }

      > * {
        flex: 0 1 auto;
      }
    }

    &--info {
      /* Dependency: Admin > rules + system rules + scan status */
      width: 20rem;
    }

    &--objects {
      /* Dependency: Admin > scan completed */
      width: 15rem;
    }
  }

  .domain-url {
    /* Maybe dependency: Admin > scannerjob */
    text-overflow: ellipsis;
    word-break: break-all;
  }

  tbody.links {
    tr:hover td {
      cursor: pointer;
      background-color: var(--color-primary-light);
    }

    &.no-header {
      tr:first-of-type {
        td {
          border-top: none;
        }
      }
    }
  }

  a:not(.button) {
    text-decoration: none;
    font-weight: 500;
    color: var(--color-primary);

    &:hover {
      color: var(--color-primary-dark);
    }
  }

  .nothing_found_row {
    /* Dependency: Admin > system rules + orgunit list */
    text-align: center;
    font-style: italic;
  }
}

@media (min-width: $break-sm) {
  col.datatable__column--matchcount,
  col.datatable__column--source {
    display: table-column;
  }

  td.datatable__column--matchcount,
  th.datatable__column--matchcount,
  td.datatable__column--source,
  th.datatable__column--source {
    display: table-cell;
  }
}

@media (min-width: $break-lg) {
  .datatable tbody.links.no-header {
    tr:first-of-type {
      td {
        border-top: none;
      }

      td:first-of-type {
        border-top-left-radius: var(--border-radius-widget);
      }

      td:last-of-type {
        border-top-right-radius: var(--border-radius-widget);
      }
    }
  }
}

.compressed {
  /* The table in the expandable row on the results overview on Report. */
  --datatable-cell-padding: 1rem;
  table-layout: auto;
}

// probability,  start
.probability {
  display: inline-block;
  font-size: 0.75rem;
  font-weight: bold;
  border-radius: var(--border-radius-button);
  color: var(--color-text-white);
  text-align: center;
  width: 3.5rem;
  padding: 0.5rem;
  margin: -0.6rem 0;

  &--red {
    background-color: var(--color-error);
  }

  &--orange {
    background-color: var(--color-problem);
  }

  &--green {
    background-color: var(--color-ok-dark);
  }
}

.datatable th,
.datatable td {
  line-height: normal; // prevent y-overflow
  padding: var(--datatable-cell-padding) calc(var(--datatable-cell-padding) / 2);
  vertical-align: middle;

  &.loading {
    text-align: center;
    font-style: italic;
  }

  .overflow-ellipsis {
    .employee__fullname {
      font-weight: bold;
    }

    .employee__username {
      content: "";
      display: block;
      margin-top: 10px;
    }

    // Only show ellipsis on pc-screens.
    @media (min-width: $break-lg) {
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }
  }

  .full-path {
    white-space: normal;
    word-break: break-all;
  }

  &:first-child {
    padding-left: var(--datatable-cell-padding);
  }

  &:last-child {
    padding-right: var(--datatable-cell-padding);
  }
}

.datatable.middle th,
.datatable.middle td {
  vertical-align: middle;
}

.datatable tr.error td {
  border-top: 0;
  padding-top: 0;
}

.datatable .column-headings th,
.datatable .topbar-stick th {
  position: static; // override aggressive position: relative; on * in _base.scss

  .th-flex-container {
    display: flex;
    align-items: center;
  }
}

.datatable .column-headings {
  z-index: 1;

  th {
    font-size: 1rem;
    font-weight: bold;
    padding-top: 1.5rem;
    padding-bottom: 1.5rem;
    z-index: 1;
    border-top: 1px solid rgba(0, 0, 0, 0.2);
    background-color: #f4f4f4;
    white-space: nowrap;
    top: calc(
      2rem + var(--size-logo-height) + 12rem
    ); // for sticky purposes; header height + row height of 9rem

    @media (min-width: $break-sm) {
      top: calc(
        2rem + var(--size-logo-height) + 9rem
      ); // for sticky purposes; header height + row height of 9rem
    }

    @media (min-width: $break-md) {
      top: calc(
        2rem + var(--size-logo-height) + 6rem
      ); // for sticky purposes; header height + row height of 6rem
    }

    @media (min-width: $break-lg) {
      top: 6rem; // for sticky purposes
    }
  }
}

.datatable .topbar-stick {
  th {
    background-color: #fff;
    z-index: 2;
    top: calc(
      2rem + var(--size-logo-height)
    ); // for sticky purposes; header height

    &:first-child {
      border-top-left-radius: var(--border-radius-widget);
    }

    &:last-child {
      border-top-right-radius: var(--border-radius-widget);
    }

    @media (min-width: $break-lg) {
      top: 0; // for sticky purposes
    }
  }
}

.datatable .sticky th {
  position: -webkit-sticky;
  position: sticky;
}

.datatable .stuck th {
  border-bottom: 1px solid rgba(0, 0, 0, 0.2);

  &:first-child {
    border-top-left-radius: 0;
  }

  &:last-child {
    border-top-right-radius: 0;
  }
}

.datatable td {
  border-top: 1px solid rgba(0, 0, 0, 0.2);
  transition: background-color 0.2s ease-in-out;
}

/* .datatable--click-rows, start */
.datatable--click-rows td {
  padding: 0;

  &:first-child {
    padding-left: inherit;
  }

  &:last-child {
    padding-right: inherit;
  }
}

.datatable--click-rows a {
  color: inherit;
  display: block;
  padding: 2rem;
  text-decoration: none;
}

/* .datatable--click-rows, stop */

/* Icons and text in datatable  */
.flex {
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
  // margin-top: .5rem;

  > *:not(:last-child) {
    margin-right: 0.5rem;
  }

  &--icon {
    margin-top: -0.25rem;
  }

  &--character {
    margin-top: 1.25rem;
    margin-left: 1rem;
    margin-right: 0.25rem;
  }

  &--bottom {
    margin-bottom: 0.25rem;
  }

  &--width {
    margin-right: 0.75rem;
    height: 1.2rem;
    max-width: 1.5rem;

    &--icon {
      height: auto;
      max-width: 1.5rem;
      color: #222222;
    }
  }

  svg {
    height: 100%;
    width: auto;
  }

  .text {
    color: var(--color-text-secondary);
    font-size: 0.75rem;
    line-height: 1rem;
  }
}

/* expression in datatable  */
.code-grey {
  background-color: #e0e0e0;
  border: 1px solid rgba(0, 0, 0, 0.1);
  border-radius: var(--border-radius-button);
  padding: 0.5rem;
}

.scan {
  &__item-title {
    display: block;
  }

  &__item-meta {
    margin-top: var(--size-ds-unit);

    span {
      display: inline-block;
      font-size: 0.75rem;
      margin-right: 0.5rem;
      opacity: 0.75;
    }
  }
}

.match-context {
  &::before,
  &::after {
    content: "[...]";
    color: #aaa;
  }

  &::before {
    padding-right: 0.35em;
  }

  &::after {
    padding-left: 0.35em;
  }
}

.tooltip {
  &.cursor-help {
    cursor: help;
  }
}

[data-tooltip] {
  position: absolute;
  font-size: 0.85rem;
  padding: 0.375rem 0.5rem;
  border: 1px solid rgba(0, 0, 0, 0.2);
  border-radius: var(--border-radius-button);
  background-color: var(--color-body-bg);
  color: var(--color-text-secondary);
  box-shadow: var(--box-shadow-filter);
  width: auto;
  white-space: nowrap;
  z-index: 9999;
  cursor: text;
}

// Icon for the error messages

.table {
  &__icon {
    &--warning {
      color: var(
        --color-warning
      ); // Specific styling for the warning icon in tables
    }
  }
}

.datatable tr.warning {
  background-color: var(--color-warning);
}

.datatable tr.problem textarea[readonly="true"] {
  width: 100%;
  padding: 1em;
}

// ***********************************************
// ***********************************************
// ***** THE BIG TABLE REFACTORING ANNO 2024 *****
// ***********************************************
// ***********************************************

// Redmine ticket: [#59413]

// NOTE:
// Change the class name from "datatablex" to "datatable" after all tables have been refactored.
// Remember to do the same in all relevant HTML docs.

// Used between icons and their label text
$uniform_icon-label_gap-size: 0.25rem;
$uniform_gap-size: 0.25rem;
$font-size_subtitle: 0.875rem;

// Magical mixin for instant centered behaviour. So far only available in datatables.
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

.datatablex {
  // Box model
  width: 100%;
  max-width: 100%;
  border-collapse: separate;
  border-spacing: 0;

  &.no-side-scroll {
    /* NOTE: To avoid sidescroll behaviour, add the class ".no-side-scroll" to the table, card-container
    and wrapper. This is not the most elegant solution, but for now it's better to reverse engineer it 
    rather than change every single table that's been modernized so far. */

    table-layout: fixed;
  }

  &__card-container {
    &:not(.no-side-scroll) {
      /* NOTE: To avoid sidescroll behaviour, add the class ".no-side-scroll" to the table, card-container
      and wrapper. This is not the most elegant solution, but for now it's better to reverse engineer it 
      rather than change every single table that's been modernized so far. */

      overflow: hidden; // Hides overflow from the scrollbar and the background-gradient
    }

    // Layout
    position: relative;

    // Box model
    margin-bottom: 0;
    border-radius: 0;

    // Visual
    background-color: var(--color-widget-bg);
    box-shadow: var(--box-shadow-widget);

    @media (min-width: $break-lg) {
      // Box model
      margin-bottom: calc(2 * var(--datatable-cell-padding));
      border-radius: var(--border-radius-widget);
    }
  }

  &__wrapper {
    // Box model
    max-width: 100%;
    height: inherit;
    clear: both;

    &:not(.no-side-scroll) {
      /* NOTE: To avoid sidescroll behaviour, add the class ".no-side-scroll" to the table, card-container
      and wrapper. This is not the most elegant solution, but for now it's better to reverse engineer it 
      rather than change every single table that's been modernized so far. */

      // Layout
      overflow-x: auto;

      // Visual
      background-image: // use gradients to signify that the table is scrollable
        linear-gradient(
          to right,
          white var(--datatable-cell-padding),
          rgba(255, 255, 255, 0)
        ),
        linear-gradient(to right, #22222244, rgba(255, 255, 255, 0)),
        linear-gradient(
          to left,
          white var(--datatable-cell-padding),
          rgba(255, 255, 255, 0)
        ),
        linear-gradient(to left, #22222244, rgba(255, 255, 255, 0));
      background-repeat: no-repeat;
      background-position:
        left top,
        left top,
        100% 0,
        100% 0;
      background-size:
        calc(var(--datatable-cell-padding) * 4) 100%,
        var(--datatable-cell-padding) 100%,
        calc(var(--datatable-cell-padding) * 4) 100%,
        var(--datatable-cell-padding) 100%;
      background-attachment: local, scroll, local, scroll;
    }
  }

  &__row {
    // Styles for all th + td inside datatables
    :is(th, td) {
      white-space: normal;
      word-wrap: break-word;
      overflow-wrap: break-word;
      max-width: 100%;

      line-height: normal;
      padding: var(--datatable-cell-padding)
        calc(var(--datatable-cell-padding) / 2);
      vertical-align: middle;

      &:first-child {
        padding-left: var(--datatable-cell-padding);
      }

      &:last-child {
        padding-right: var(--datatable-cell-padding);
      }
    }

    td {
      border-top: 1px solid rgba(0, 0, 0, 0.2);
      transition: opacity 200ms ease-in-out;

      .td-content__container {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        gap: 1rem;

        .table-ui__container {
          display: flex;
          align-items: center;
        }
      }

      .tooltip,
      .expandable-content {
        max-width: 100%;

        .overflow-ellipsis {
          // Only apply truncation on larger screens (desktop size)
          @media (min-width: $break-lg) {
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;

            &.full-path {
              white-space: normal;
              word-break: break-all;
            }
          }
        }
      }
    }

    .info {
      // Local SCSS vars
      $text-size: 1rem;
      $icon-size: 1.25rem;

      &__wrapper {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        gap: 0.75rem;
      }

      &__container {
        @include flex-center;
        gap: $uniform_icon-label_gap-size;
      }

      &__label {
        color: var(--color-text-secondary);
        font-size: $text-size;
        line-height: $text-size;
        margin-top: calc(#{$text-size} * 0.115);
      }

      &__icon.material-symbols,
      &__icon.material-symbols-outlined {
        color: var(--color-primary);
        font-size: $icon-size;
        width: $icon-size;
        height: $icon-size;
        line-height: $icon-size;
      }

      &--none {
        opacity: 50%;

        .material-symbols,
        .material-symbols-outlined {
          color: var(--color-text-secondary);
        }
      }
    }

    .th__flex-container {
      display: flex;
      align-items: center;

      .th-label {
        display: flex;
        align-items: center;
        gap: 4px;
      }

      .help-tooltip {
        $icon-size: 1.25rem; // Local var setting a fixed size for this element.

        vertical-align: middle;
        width: $icon-size;
        height: $icon-size;

        .material-symbols#help,
        .material-symbols-outlined#help {
          color: var(--color-primary-dark);
          opacity: 50%;
          font-size: $icon-size;
          font-variation-settings:
            "FILL" 1,
            "wght" 400,
            "GRAD" 0,
            "opsz" 20;
        }
      }
    }

    .td__flex-container {
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }
  }

  &__row,
  &__row--expanded {
    &.highlighted,
    &.highlighted + .matches-list {
      /* Shared styles for table cells */
      > :is(td, th) {
        background-color: var(--color-primary-lightest);
        box-shadow: inherit;
      }

      // Shared styles for buttons and status elements
      .button:not(.button--caret-button):not(.button--deletion-button):not(
          .dropdown-container .button
        ),
      .status {
        background-color: var(--color-widget-bg) !important;
        color: var(--color-text-secondary) !important;

        // Specific styles for buttons
        &.button {
          border-color: var(--color-widget-bg);
        }
      }

      .button--deletion-button {
        $button-color: var(--color-primary-dark);

        background-color: $button-color;
        border-color: $button-color;
        color: var(--color-text-white);
      }
    }
  }

  .column {
    width: auto;
    /* Sets all column widths to auto unless otherwise specified. */

    &--checkbox {
      /* Only use this for actual checkboxes and not checkbox-typed intput disguised as a status
      toggle. */
      width: 4.5rem; // 72px

      .ds-checkbox {
        /* Overwrites the "standard" checkbox styling for ones inside this specific type of column. */
        margin: 0;
        line-height: normal;

        label {
          padding-left: 24px;
        }
      }
    }

    &--numeral {
      /* All table columns with only numbers should have this class. */
      /* Right aligns content and makes it nicer to navigate for users. */

      text-align: right;

      .th__flex-container {
        justify-content: end;
      }

      .datatable-numeral {
        margin-right: 0.375rem; // Aligning the number in the <td> with the caret icon in the <th>
      }

      @media (min-width: $break-lg) {
        /* Add right padding to the last numeral column in a sequence UNLESS it is the last column in the row */
        &:is(:not(col)):has(+ :not(.column--numeral)):not(:last-child) {
          /* If the next sibling is not a column--numeral, then the last numeral column needs a right padding to optimize visual navigation */
          padding-right: var(--datatable-cell-padding);
        }
      }

      // NOTE to the SCSS nerd:
      // This "container behaviour" could be a reusable mixin.
      .matches_container {
        display: flex;
        align-items: center;
        justify-content: flex-end; // Realigns the content with the right side of the <td>.
        flex-wrap: nowrap;
        gap: 0.5rem;

        #warning {
          color: var(--color-error);
          cursor: default;
        }
      }
    }

    &--attribute {
      /* We have these types of icon/status/label based columns often enough to justify making
      them their own sub-class, but I must admit I don't know what to name them. 
      Is `.column--attribute` descriptive enough? I'm specifically looking for something as neat
      as `.column--numeral`, but maybe that's impossible. */
      .th,
      .td {
        &__flex-container {
          justify-content: center;
          text-align: center;
        }
      }

      @media (min-width: $break-xl) {
        padding-left: var(--datatable-cell-padding);
        padding-right: var(--datatable-cell-padding);
      }
    }

    &--loading,
    &--nodata {
      // Visual
      color: var(--color-text-secondary);

      // Typography
      text-align: center;
      font-style: italic;
    }
  }

  a:not(.button) {
    // So far only used in the org-table on Admin
    text-decoration: none;
    font-weight: 500;
    color: var(--color-primary);
  }

  .th__flex-container {
    display: flex;
    align-items: center;
    text-wrap: nowrap;

    .th-label {
      display: flex;
      align-items: center;
      gap: 4px;
    }
  }

  .nothing_found_row {
    text-align: center;
    font-style: italic;
    color: var(--color-text-secondary);
  }

  // **************************
  // ***** Sticky headers *****
  // **************************
  .column-headings {
    z-index: 1;

    th {
      // Box Model
      padding-top: 1.5rem;
      padding-bottom: 1.5rem;
      border-top: 1px solid rgba(0, 0, 0, 0.2);

      // Visual
      background-color: #f4f4f4;

      // Typography
      font-size: 1rem;
      font-weight: bold;
      white-space: nowrap;

      // Misc.
      z-index: 1;

      /* Sticky positioning based on breakpoints */
      top: calc(2rem + var(--size-logo-height) + 6rem);

      @media (min-width: $break-lg) {
        top: 6rem;
      }
    }
  }

  .topbar-stick {
    th {
      background-color: #fff;
      z-index: 2;

      /* Sticky positioning */
      top: calc(2rem + var(--size-logo-height));

      @media (min-width: $break-lg) {
        top: 0; // Adjusted for large screens
      }

      &:first-child {
        border-top-left-radius: var(--border-radius-widget);
      }

      &:last-child {
        border-top-right-radius: var(--border-radius-widget);
      }
    }
  }

  .column-headings,
  .topbar-stick {
    th {
      position: static; // override aggressive position: relative; on * in _base.scss
    }
  }

  /* Sticky behavior shared across headings */
  .sticky th {
    position: sticky;
  }

  .stuck th {
    border-bottom: 1px solid rgba(0, 0, 0, 0.2);

    &:first-child {
      border-top-left-radius: 0;
    }

    &:last-child {
      border-top-right-radius: 0;
    }
  }
}

// **************************************
// ***** TABLES IN THE ADMIN MODULE *****
// **************************************

// SCSS vars for über precise and responsive column widths
$sidemenu_and_content: calc(var(--width-sidemenu) + var(--padding-content));
$relative_table_width--admin: calc(100vw - #{$sidemenu_and_content});

@mixin pill-variant($bgColor, $textColor, $font-size: 0.875rem) {
  background-color: $bgColor;
  color: $textColor;
  font-size: $font-size;
  line-height: $font-size;

  padding: 0 0.75rem; // 12px side padding
  border-radius: 50px;
  height: 1.75rem; // 28px
  width: fit-content;
  text-wrap: nowrap;

  .status {
    &__wrapper {
      @include flex-center;
      gap: 0.25rem;
      height: inherit;

      /* Styles for when both `.status__icon` and `.status__label` exist inside `.status__wrapper`. */
      &:has(.status__icon + .status__label) {
        /* Add extra spacing on the right to adjust the visual weight. */
        padding-right: 0.25rem; // 4px

        .status__label {
          /* Google's recommended alignment correction for text next to icons */
          margin-top: calc(14px * 0.115);
          font-weight: 500;
        }
      }
    }

    &__icon {
      &.material-symbols,
      &.material-symbols-outlined {
        $pill-icon-size: 1.25rem; // 20px
        font-size: $pill-icon-size;
        width: $pill-icon-size;
      }

      &.material-symbols {
        font-variation-settings:
          "FILL" 1,
          "wght" 400,
          "GRAD" 0,
          "opsz" 20;
      }

      &.material-symbols-outlined {
        font-variation-settings:
          "FILL" 0,
          "wght" 400,
          "GRAD" 0,
          "opsz" 20;
      }
    }

    &__label {
      // Empty
    }
  }
}

// ******************************
// ***** ORGANIZATION TABLE *****
// ******************************

// Redmine ticket: [#59989]

.org-table {
  // Table SCSS vars:
  $fixed-column_width: 8.5rem; // The "fixed" column of this specific table
  $table_width: calc(#{$relative_table_width--admin} - #{$fixed-column_width});
  $table_min-width: 70rem; // The size for this specific table

  // Column SCSS vars:
  $width_25: calc(#{$table_width} * 0.25);
  $min-width_25: calc(#{$table_min-width} * 0.25);

  $width_50: calc(#{$table_width} * 0.5);
  $min-width_50: calc(#{$table_min-width} * 0.5);

  // Styles:
  min-width: $table_min-width;

  .column {
    &--name {
      width: clamp(
        calc(#{$min-width_25}),
        calc(#{$width_25}),
        calc(#{$width_25})
      );
    }

    &--info {
      width: clamp(
        calc(#{$min-width_25}),
        calc(#{$width_25}),
        calc(#{$width_25})
      );

      .info {
        // Local SCSS vars
        $text-size: 1rem;
        $icon-size: 1.25rem;

        &__label {
          color: var(--color-text-secondary);
          font-size: $text-size;
          line-height: $text-size;
        }

        .material-symbols,
        .material-symbols-outlined {
          color: var(--color-primary);
          font-size: $icon-size;
          width: $icon-size;
          height: $icon-size;
          line-height: $icon-size;
        }
      }
    }

    &--import {
      width: clamp(
        calc(#{$min-width_50}),
        calc(#{$width_50}),
        calc(#{$width_50})
      );
    }

    &--actions {
      // The "fixed" column of this specific table
      width: $fixed-column_width;

      #sso-button {
        /* A "diy" icon made with existing icons from the Material Symbols library*/
        #sso-icon-container {
          $standard-icon-size: 1.5rem; // Same as the standard icon font size
          width: $standard-icon-size;
          height: $standard-icon-size;

          position: relative;

          i {
            position: absolute;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%);

            &#cloud {
              z-index: 1;
            }

            &#key {
              z-index: 2; // Place it on top of cloud icon to imitate "cut-out" effect
              padding-top: 0.25rem;
              color: var(--color-btn-neutral);
              font-variation-settings:
                "FILL" 1,
                "wght" 400,
                "GRAD" -25,
                "opsz" 20;
              font-size: 18px;
              text-align: center;
            }
          }
        }
      }
    }
  }
}

// ******************************************
// ***** ORGANIZATIONAL STRUCTURE TABLE *****
// ******************************************

// Redmine ticket: [#60290]

.orgunit-table {
  // Table SCSS vars:
  $table_width: $relative_table_width--admin;
  $table_min-width: 70rem; // The size for this specific table

  // Column SCSS vars:
  $width_15: calc(#{$table_width} * 0.15);
  $min-width_15: calc(#{$table_min-width} * 0.15);

  $width_25: calc(#{$table_width} * 0.25);
  $min-width_25: calc(#{$table_min-width} * 0.25);

  $width_30: calc(#{$table_width} * 0.3);
  $min-width_30: calc(#{$table_min-width} * 0.3);

  // Styles:
  min-width: $table_min-width;

  .column {
    $uniform_icon-label_gap-size: 0.25rem;

    &--name {
      width: clamp(
        calc(#{$min-width_25}),
        calc(#{$width_25}),
        calc(#{$width_25})
      );
    }

    &--affiliated-accounts {
      width: clamp(
        calc(#{$min-width_15}),
        calc(#{$width_15}),
        calc(#{$width_15})
      );

      .content-min {
        display: block;
      }

      .content-max {
        display: none;
      }

      @media (min-width: $break-xl) {
        .content-max {
          display: block;
        }

        .content-min {
          display: none;
        }
      }
    }

    &--visibility {
      width: 7.5rem; //120px
      text-align: center;

      .table-icon__container {
        .status {
          @include flex-center;

          &__wrapper {
            @include flex-center;
          }

          &--visibility-on {
            .status__icon {
              color: var(--color-checkmark);
            }
          }

          &--visibility-off {
            .status__icon {
              color: var(--color-clear);
              opacity: 60%;
              font-variation-settings: "FILL" 0 !important;
            }
          }
        }
      }
    }

    &--managers,
    &--dpos {
      width: clamp(
        calc(#{$min-width_30}),
        calc(#{$width_30}),
        calc(#{$width_30})
      );
    }
  }
}

// ****************************************
// ***** ORGANIZATIONS ACCOUNTS TABLE *****
// ****************************************

// Redmine ticket: [#60291]

// TBA

// ************************
// ***** RULES TABLES *****
// ************************

// Redmine ticket: [#60287]

// "CUSTOM RULES":
// "SYSTEM RULES":

// TBA

// **************************
// ***** SCANNER TABLES *****
// **************************

// Redmine ticket: [#60288]

.scannerjob-table {
  // Table SCSS vars:
  // $fixed-column_width: 16rem; // The "fixed" column of this specific table
  $fixed-column_width: 210px; // The "fixed" column of this specific table
  $table_width: calc(#{$relative_table_width--admin} - #{$fixed-column_width});
  $table_min-width: 60rem;

  // Column SCSS vars:
  $width_25: calc(#{$table_width} * 0.25);
  $min-width_25: calc(#{$table_min-width} * 0.25);

  $width_35: calc(#{$table_width} * 0.35);
  $min-width_35: calc(#{$table_min-width} * 0.35);

  $width_40: calc(#{$table_width} * 0.4);
  $min-width_40: calc(#{$table_min-width} * 0.4);

  // Styles:
  min-width: $table_min-width;

  .column {
    &--name {
      width: clamp(
        calc(#{$min-width_35}),
        calc(#{$width_35}),
        calc(#{$width_35})
      );

      .name {
        &__container {
          display: flex;
          flex-direction: column;
          gap: $uniform_icon-label_gap-size;
        }

        &__label {
          &:hover {
            color: var(--color-primary-dark);
          }
        }

        &__org {
          font-size: 0.813rem;
          color: var(--color-text-secondary);
          font-style: italic;
        }
      }

      .UI-container {
        width: fit-content;
        margin-top: 0.5rem;
      }
    }

    &--validation {
      width: clamp(
        calc(#{$min-width_25}),
        calc(#{$width_25}),
        calc(#{$width_25})
      );

      .status {
        &--valid {
          @include pill-variant(
            var(--color-status-good),
            var(--color-checkmark)
          );
        }

        &--invalid {
          @include pill-variant(var(--color-status-bad), var(--color-clear));
        }
      }
    }

    &--automatic {
      width: clamp(
        calc(#{$min-width_40}),
        calc(#{$width_40}),
        calc(#{$width_40})
      );

      .status {
        display: flex;
        align-items: center;
        gap: $uniform_icon-label_gap-size;

        &__icon {
          &.material-symbols,
          &.material-symbols-outlined {
            font-variation-settings: "wght" 300;
            color: var(--color-text-secondary);
          }
        }

        &__label {
          $font-size: 1rem;
          font-size: $font-size;
          margin-top: calc(#{$font-size} * 0.115);

          color: var(--color-text-main);
        }
      }
    }

    &--actions {
      // The "fixed" column of this specific table
      width: $fixed-column_width;

      .button-group {
        /* NOTE: We might need to re-think this in _buttons.scss instead, but I 
        think it's worth waiting until after we've refactored all datatables */
        flex-wrap: nowrap;

        .button {
          .material-symbols,
          .material-symbols-outlined {
            color: var(--color-primary-dark);
          }

          &:hover {
            background-color: var(--color-primary-dark) !important;

            .material-symbols,
            .material-symbols-outlined {
              color: var(--color-text-white);
            }

            .material-symbols {
              font-variation-settings:
                "FILL" 1,
                "wght" 500,
                "GRAD" -25,
                "opsz" 24 !important;
            }

            .material-symbols-outlined {
              font-variation-settings:
                "FILL" 0,
                "wght" 500,
                "GRAD" -25,
                "opsz" 24 !important;
            }
          }
        }
      }
    }
  }

  &--webscanner {
    // NOTE: This only applies to the webscanner table

    /* We overwrite the "standard" column distrubution for scannerjob tables 
    because webscanner tables have an extra column with URL's. This requires 
    us to repeat the vars, so we can recalculate the column sizes. */

    $table_min-width: 70rem; // Bigger min-width to account for more table content

    // Column SCSS vars:
    $min-width_20: calc(#{$table_min-width} * 0.2);
    $width_20: calc(#{$table_width} * 0.2);

    $min-width_25: calc(#{$table_min-width} * 0.25);
    $width_25: calc(#{$table_width} * 0.25);

    $min-width_30: calc(#{$table_min-width} * 0.3);
    $width_30: calc(#{$table_width} * 0.3);

    // Styles:
    min-width: $table_min-width;

    .column {
      &--name {
        width: clamp(
          calc(#{$min-width_25}),
          calc(#{$width_25}),
          calc(#{$width_25})
        );
      }

      &--url {
        width: clamp(
          calc(#{$min-width_25}),
          calc(#{$width_25}),
          calc(#{$width_25})
        );

        .tooltip {
          // This could be remade as an mixin and made available for all datatables
          .overflow-ellipsis {
            word-break: break-all;

            // Only applying the ellipsis on pc-screens
            @media (min-width: $break-lg) {
              overflow: hidden;
              text-overflow: ellipsis;
              white-space: nowrap;
              width: calc(#{$width_25}* 0.95);
            }
          }
        }
      }

      &--validation {
        width: clamp(
          calc(#{$min-width_20}),
          calc(#{$width_20}),
          calc(#{$width_20})
        );
      }

      &--automatic {
        width: clamp(
          calc(#{$min-width_30}),
          calc(#{$width_30}),
          calc(#{$width_30})
        );
      }

      // The width for "--actions" is not overwritten.
    }
  }

  &--filescanner {
    // NOTE: This only applies to the filescanner table

    /* We overwrite the "standard" column distrubution for scannerjob tables 
    because filescanner tables have an extra column with URL's. This requires 
    us to repeat the vars, so we can recalculate the column sizes. */

    $table_min-width: 65rem; // Bigger min-width to account for more table content

    // Column SCSS vars:
    $min-width_20: calc(#{$table_min-width} * 0.2);
    $width_20: calc(#{$table_width} * 0.2);

    $min-width_25: calc(#{$table_min-width} * 0.25);
    $width_25: calc(#{$table_width} * 0.25);

    $min-width_35: calc(#{$table_min-width} * 0.35);
    $width_35: calc(#{$table_width} * 0.35);

    // Styles:
    min-width: $table_min-width;

    .column {
      &--name {
        width: clamp(
          calc(#{$min-width_25}),
          calc(#{$width_25}),
          calc(#{$width_25})
        );
      }

      &--drive,
      &--validation {
        width: clamp(
          calc(#{$min-width_20}),
          calc(#{$width_20}),
          calc(#{$width_20})
        );
      }

      &--automatic {
        width: clamp(
          calc(#{$min-width_35}),
          calc(#{$width_35}),
          calc(#{$width_35})
        );
      }

      // The width for "--actions" is not overwritten.
    }
  }
}

// ******************************
// ***** SCAN STATUS TABLES *****
// ******************************

// Redmine ticket: [#60289]

// ONGOING SCANS:
// FINISHED SCANS:
// ERROR MESSAGES:

// TBA

// ***************************************
// ***** TABLES IN THE REPORT MODULE *****
// ***************************************

// ***** NOTES *****

/* Report doesn't have the side nav like Admin, BUT all content will be 
  getting a max-width, so calculations for column width are a bit different 
  here. */

// **********************************
// ***** RESULT OVERVIEW TABLES *****
// **********************************

.results-table {
  // ***** REPORT/RESULTS *****
  // ******** ARCHIVE *********
  // - PERSONAL
  // - REMEDIATOR
  // - UNDISTRIBUTED

  .column {
    &--flexible {
      width: 100%;

      &.column--numeral {
        width: max(10vw, 140px);
        // Min-width is 140px unless 10vw > 140px
      }
    }

    &--name {
      // Empty
    }

    &--matchcount {
      // Empty
    }

    &--datasource_last_modified {
      width: calc(var(--datatable-cell-padding) + 12ch);
      // 12ch is the exact number of characters needed for "dd._mon_yyyy".
      // Side-padding for table cells is defined as "--datatable-cell-padding/2".
      // So it ends up being 12ch + (2em/2)*2 = 120px + 32px = 152px.

      @media (max-width: $break-xl) {
        display: none;
      }
    }

    &--source {
      width: 6.25rem; // 100px, fits the width of the th text.
    }

    &--path {
      // Empty
    }

    &--resolution-status {
      /* Archive only */
      width: 13rem; // 208px, roughly fits the width of the widest status label.

      .status {
        @include pill-variant(
          var(--color-primary-lightest),
          var(--color-primary-dark)
        );

        /* We should consider colour coding the status chips. For now I'm not sure how to do it
        in a non-judgemental way. */
        // &[data-status="0"] {
        //   // "Other"
        //   @include pill-variant(
        //     var(--color-btn-neutral),
        //     var(--color-text-secondary)
        //   );
        // }

        // &[data-status="1"] {
        //   // "Edited"
        //   @include pill-variant(
        //     var(--color-status-ok),
        //     var(--color-ok)
        //   );
        // }

        // &[data-status="2"] {
        //   // "Journalized and moved"
        //   @include pill-variant(
        //     var(--color-status-good),
        //     var(--color-ok-dark)
        //   );
        // }

        // &[data-status="3"] {
        //   // "Deleted"
        //   @include pill-variant(
        //     var(--color-status-good),
        //     var(--color-ok-dark)
        //   );
        // }

        // &[data-status="4"] {
        //   // "False positive"
        //   @include pill-variant(
        //     var(--color-status-bad),
        //     var(--color-error)
        //   );
        // }
      }
    }

    &--actions {
      width: 12.25rem; // 196px

      .button-group {
        flex-wrap: nowrap;

        #expand_more {
          // The caret icon
          color: var(--color-primary-dark);
        }
      }
    }
  }

  .datatablex__row--expanded {
    /* NOTE: Not sure if this should live here permanently. It's behaviour/styles we might wanna
    reuse in other datatables. */

    > td {
      padding: calc(var(--datatable-cell-padding) / 2)
        var(--datatable-cell-padding);
    }

    // Adding appropriate styling to the expanded row only.
    &.matches-list {
      box-shadow: inset 4px 0 0 var(--color-primary);
      background-color: rgba(0, 0, 0, 0.035);

      .matches-list {
        &__column {
          width: auto;

          &--match {
            min-width: 30%;

            overflow-wrap: break-word;
            word-wrap: break-word;
            -ms-word-break: break-all;
            word-break: break-all;
          }

          &--probability {
            max-width: 7.5rem; // 120px, fits the width of the <th> content.
            text-align: right;
          }

          &--show-more-matches {
            padding-left: 0; // Align button inside with left side.
            padding-top: 2rem; // Add visual space between button and rows above.
          }
        }
      }
    }
  }
}

// *********************************
// ***** LEADER OVERVIEW TABLE *****
// *********************************

// Redmine ticket: [#60320]

.leaderoverview-table {
  font-size: 0.875rem; // 14px

  .column {
    &--employee {
      .employee {
        &__container {
          display: flex;
          flex-direction: column;
          gap: $uniform_gap-size;
        }

        &__fullname {
          font-weight: bold;
        }

        &__username {
          color: var(--color-text-secondary);
          font-size: $font-size_subtitle;
        }
      }

      .tooltip {
        .overflow-ellipsis {
          word-break: break-all;

          // Only applying the ellipsis on pc-screens
          @media (min-width: $break-lg) {
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
            width: 100%;
          }
        }
      }
    }

    &--matches-old,
    &--matches-withheld,
    &--matches-all {
      width: max(16vw, 140px);

      @media (min-width: $break-lg) {
        width: max(14vw, 180px);
      }
    }

    &--status {
      width: 9.625rem; // 154px
      /* NOTE: This needs to match the rendered width of the widest tag/status element. */
    }

    &:not(.column--actions) {
      /* NOTE: this could be a candidate for a universal style, if we added .column--checkbox to the :not() as well. */
      @media (min-width: 1760px) {
        width: auto;
      }
    }

    &--actions {
      @media (max-width: 1439px) {
        width: 7.5rem; // 120px

        .wide-screen-version {
          display: none !important;
        }
      }

      @media (min-width: $break-xl) {
        width: 14.125rem; // 226px

        .narrow-screen-version {
          display: none !important;
        }
      }

      .button-group {
        flex-wrap: nowrap;
        justify-content: flex-end;

        #expand_more {
          // The caret icon that expands the "hidden" <tr>
          color: var(--color-primary-dark);
        }
      }
    }
  }

  .datatablex__row {
    // Adding appropriate styling to the expanded row only.
    &.user-overview {
      box-shadow: inset 4px 0 0 var(--color-primary);
      background-color: rgba(0, 0, 0, 0.035);
    }
  }
}

# Generated by Django 3.2.11 on 2023-10-09 07:31

import django.contrib.postgres.indexes
from django.db import migrations, models
import django.db.models.deletion
import recurrence.fields


class Migration(migrations.Migration):

    replaces = [('os2datascanner', '0098_msgraphmailscanner_scan_deleted_items_folder'), ('os2datascanner', '0099_scheduledcheckup_sc_cc_lookup'), ('os2datascanner', '0100_order_msgraphscanners_by_name'), ('os2datascanner', '0101_webscanner_reduce_communication'), ('os2datascanner', '0102_webscanner_extended_hints'), ('os2datascanner', '0103_change_language_of_verbose_names'), ('os2datascanner', '0104_scanner_covered_accounts'), ('os2datascanner', '0105_filescanner_unc_is_home_root'), ('os2datascanner', '0106_turbocprrule'), ('os2datascanner', '0107_msgraphmailscanner_scan_syncissues_folder')]

    dependencies = [
        ('organizations', '0014_position_organizations_position_unique_constraint'),
        ('os2datascanner', '0097_move_url_from_scanner_to_children'),
    ]

    operations = [
        migrations.AddField(
            model_name='msgraphmailscanner',
            name='scan_deleted_items_folder',
            field=models.BooleanField(default=False, help_text='Include emails in the deleted post folder', verbose_name='Scan deleted items folder'),
        ),
        migrations.AddIndex(
            model_name='scheduledcheckup',
            index=django.contrib.postgres.indexes.HashIndex(fields=['handle_representation'], name='sc_cc_lookup'),
        ),
        migrations.AlterModelOptions(
            name='msgraphcalendarscanner',
            options={'ordering': ['name']},
        ),
        migrations.AlterModelOptions(
            name='msgraphfilescanner',
            options={'ordering': ['name']},
        ),
        migrations.AlterModelOptions(
            name='msgraphmailscanner',
            options={'ordering': ['name']},
        ),
        migrations.AddField(
            model_name='webscanner',
            name='reduce_communication',
            field=models.BooleanField(default=False, help_text='reduce the number of HTTP requests made to the server by unconditionally trusting the content of the sitemap', verbose_name='reduce communication'),
        ),
        migrations.AddField(
            model_name='webscanner',
            name='extended_hints',
            field=models.BooleanField(default=False, help_text='present pages by their HTML titles and allow the presentation of links to be overridden', verbose_name='extended hint support'),
        ),
        migrations.AlterField(
            model_name='scanner',
            name='authentication',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='os2datascanner_scanner_authentication', to='os2datascanner.authentication', verbose_name='username'),
        ),
        migrations.AlterField(
            model_name='scanner',
            name='do_last_modified_check',
            field=models.BooleanField(default=True, verbose_name='check date of last modification'),
        ),
        migrations.AlterField(
            model_name='scanner',
            name='do_ocr',
            field=models.BooleanField(default=False, verbose_name='scan images'),
        ),
        migrations.AlterField(
            model_name='scanner',
            name='exclusion_rules',
            field=models.ManyToManyField(blank=True, related_name='scanners_ex_rules', to='os2datascanner.Rule', verbose_name='exclusion rules'),
        ),
        migrations.AlterField(
            model_name='scanner',
            name='name',
            field=models.CharField(db_index=True, max_length=256, unique=True, verbose_name='name'),
        ),
        migrations.AlterField(
            model_name='scanner',
            name='only_notify_superadmin',
            field=models.BooleanField(default=False, verbose_name='only notify superadmin'),
        ),
        migrations.AlterField(
            model_name='scanner',
            name='rules',
            field=models.ManyToManyField(blank=True, related_name='scanners', to='os2datascanner.Rule', verbose_name='rules'),
        ),
        migrations.AlterField(
            model_name='scanner',
            name='schedule',
            field=recurrence.fields.RecurrenceField(blank=True, max_length=1024, null=True, verbose_name='planned execution'),
        ),
        migrations.AlterField(
            model_name='scanner',
            name='validation_status',
            field=models.IntegerField(choices=[(0, 'Unverified'), (1, 'Verified')], default=0, verbose_name='validation status'),
        ),
        migrations.AlterField(
            model_name='scheduledcheckup',
            name='scanner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='checkups', to='os2datascanner.scanner', verbose_name='connected scanner job'),
        ),
        migrations.AddField(
            model_name='scanner',
            name='covered_accounts',
            field=models.ManyToManyField(blank=True, related_name='covered_by_scanner', to='organizations.Account', verbose_name='covered accounts'),
        ),
        migrations.AddField(
            model_name='filescanner',
            name='unc_is_home_root',
            field=models.BooleanField(default=False, help_text='all folders under the given UNC are user home folders; their owners have responsibility for everything they contain regardless of other filesystem metadata', verbose_name='UNC is home root'),
        ),
        migrations.CreateModel(
            name='TurboCPRRule',
            fields=[
                ('rule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='os2datascanner.rule')),
                ('do_modulus11', models.BooleanField(default=False, verbose_name='Tjek modulus-11')),
                ('examine_context', models.BooleanField(default=False, verbose_name='Tjek kontekst omkring match')),
            ],
            bases=('os2datascanner.rule',),
        ),
        migrations.AddField(
            model_name='msgraphmailscanner',
            name='scan_syncissues_folder',
            field=models.BooleanField(default=True, help_text='Include emails in the syncissues folder', verbose_name='Scan syncissues folder'),
        ),
    ]

# Generated by Django 3.2.11 on 2023-10-09 07:30

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields
import os2datascanner.projects.admin.adminapp.utils
import re
import recurrence.fields


class Migration(migrations.Migration):

    replaces = [('os2datascanner', '0051_delete_old_organization'), ('os2datascanner', '0052_rename_ldap_organization_to_organization'), ('os2datascanner', '0053_exchangescanner_org_unit'), ('os2datascanner', '0054_org_cascade_delete_rule_scannerjob_apikey'), ('os2datascanner', '0055_pythonise_ews_validation'), ('os2datascanner', '0056_alter_scannerjob_schedule'), ('os2datascanner', '0057_message_field_to_scanstatus'), ('os2datascanner', '0058_remove_ununsed_fields_webscanner'), ('os2datascanner', '0059_webscan_verbose_names_lowercase'), ('os2datascanner', '0060_filescanner_super_hidden'), ('os2datascanner', '0061_exclude_urls_webscanner'), ('os2datascanner', '0062_alter_verbose_name_rule_webscanner'), ('os2datascanner', '0063_alter_jsonfields'), ('os2datascanner', '0064_remove_unused_scanner_model_fields'), ('os2datascanner', '0065_alter_regexpattern_options'), ('os2datascanner', '0066_alter_org_unit_to_m2m_relation'), ('os2datascanner', '0067_scanstatus_last_modified'), ('os2datascanner', '0068_alter_scanner_columns'), ('os2datascanner', '0069_customrule'), ('os2datascanner', '0071_alter_scanstatus_message')]

    dependencies = [
        ('os2datascanner', '0050_remove_user_profile'),
        ('organizations', '0003_add_imported_mixin'),
        ('organizations', '0004_alter_field_imported_id_from_charfield_to_textfield'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='apikey',
            name='organization',
        ),
        migrations.RemoveField(
            model_name='rule',
            name='organization',
        ),
        migrations.RemoveField(
            model_name='scanner',
            name='organization',
        ),
        migrations.DeleteModel(
            name='Organization',
        ),
        migrations.RenameField(
            model_name='apikey',
            old_name='ldap_organization',
            new_name='organization',
        ),
        migrations.RenameField(
            model_name='rule',
            old_name='ldap_organization',
            new_name='organization',
        ),
        migrations.RenameField(
            model_name='scanner',
            old_name='ldap_organization',
            new_name='organization',
        ),
        migrations.AlterField(
            model_name='apikey',
            name='organization',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_keys', to='organizations.organization', verbose_name='organization'),
        ),
        migrations.AlterField(
            model_name='rule',
            name='organization',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rule', to='organizations.organization', verbose_name='organization'),
        ),
        migrations.AlterField(
            model_name='scanner',
            name='organization',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scannerjob', to='organizations.organization', verbose_name='organization'),
        ),
        migrations.AlterField(
            model_name='exchangescanner',
            name='userlist',
            field=models.FileField(blank=True, null=True, upload_to=os2datascanner.projects.admin.adminapp.utils.upload_path_exchange_users),
        ),
        migrations.AlterField(
            model_name='scanner',
            name='schedule',
            field=recurrence.fields.RecurrenceField(blank=True, max_length=1024, null=True, verbose_name='Planlagt afvikling'),
        ),
        migrations.AddField(
            model_name='scanstatus',
            name='status_is_error',
            field=models.BooleanField(default=False),
        ),
        migrations.RemoveField(
            model_name='webscanner',
            name='do_collect_cookies',
        ),
        migrations.RemoveField(
            model_name='webscanner',
            name='do_external_link_check',
        ),
        migrations.RemoveField(
            model_name='webscanner',
            name='do_last_modified_check_head_request',
        ),
        migrations.AlterField(
            model_name='webscanner',
            name='do_link_check',
            field=models.BooleanField(default=False, verbose_name='check links'),
        ),
        migrations.AlterField(
            model_name='webscanner',
            name='download_sitemap',
            field=models.BooleanField(default=True, verbose_name='download Sitemap from server'),
        ),
        migrations.AlterField(
            model_name='webscanner',
            name='sitemap',
            field=models.FileField(blank=True, upload_to=os2datascanner.projects.admin.adminapp.utils.upload_path_webscan_sitemap, verbose_name='sitemap file'),
        ),
        migrations.AlterField(
            model_name='webscanner',
            name='sitemap_url',
            field=models.CharField(blank=True, default='', max_length=2048, verbose_name='sitemap url'),
        ),
        migrations.AlterField(
            model_name='webscanner',
            name='validation_method',
            field=models.IntegerField(choices=[(0, 'robots.txt'), (1, 'webscan.html'), (2, 'Meta-felt')], default=0, verbose_name='validation method'),
        ),
        migrations.AddField(
            model_name='filescanner',
            name='skip_super_hidden',
            field=models.BooleanField(default=False, help_text='do not scan files with the HIDDEN and SYSTEM bits set, or files with the HIDDEN bit set whose name starts with a tilde', verbose_name='skip super-hidden files'),
        ),
        migrations.AlterField(
            model_name='filescanner',
            name='alias',
            field=models.CharField(max_length=64, null=True, verbose_name='drive letter'),
        ),
        migrations.AlterField(
            model_name='rule',
            name='description',
            field=models.TextField(verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='rule',
            name='name',
            field=models.CharField(max_length=256, unique=True, verbose_name='name'),
        ),
        migrations.AlterField(
            model_name='rule',
            name='sensitivity',
            field=models.IntegerField(choices=[(3, 'Critical'), (2, 'Problem'), (1, 'Warning'), (0, 'Notification')], default=2, verbose_name='sensitivity'),
        ),
        migrations.AddField(
            model_name='webscanner',
            name='exclude_urls',
            field=models.CharField(blank=True, default='', help_text="Be sure to include a trailing '/'to enforce path matching, i.e. https://example.com/images/ instead of https://example.com/images", max_length=2048, verbose_name='comma-separated list of urls to exclude'),
        ),
        migrations.AlterField(
            model_name='scanstatus',
            name='scan_tag',
            field=models.JSONField(unique=True, verbose_name='scan tag'),
        ),
        migrations.AlterField(
            model_name='scheduledcheckup',
            name='handle_representation',
            field=models.JSONField(verbose_name='Reference'),
        ),
        migrations.AlterField(
            model_name='webscanner',
            name='do_link_check',
            field=models.BooleanField(default=False, verbose_name='check dead links'),
        ),
        migrations.RemoveField(
            model_name='scanner',
            name='address_replace_text',
        ),
        migrations.RemoveField(
            model_name='scanner',
            name='cpr_replace_text',
        ),
        migrations.RemoveField(
            model_name='scanner',
            name='do_address_replace',
        ),
        migrations.RemoveField(
            model_name='scanner',
            name='do_cpr_replace',
        ),
        migrations.RemoveField(
            model_name='scanner',
            name='do_name_replace',
        ),
        migrations.RemoveField(
            model_name='scanner',
            name='do_run_synchronously',
        ),
        migrations.RemoveField(
            model_name='scanner',
            name='is_visible',
        ),
        migrations.RemoveField(
            model_name='scanner',
            name='name_replace_text',
        ),
        migrations.RemoveField(
            model_name='scanner',
            name='output_spreadsheet_file',
        ),
        migrations.RemoveField(
            model_name='scanner',
            name='process_urls',
        ),
        migrations.AlterModelOptions(
            name='regexpattern',
            options={'ordering': ('pk',), 'verbose_name': 'Pattern'},
        ),
        migrations.AddField(
            model_name='exchangescanner',
            name='org_unit',
            field=mptt.fields.TreeManyToManyField(blank=True, related_name='exchangescanners', to='organizations.OrganizationalUnit', verbose_name='organizational unit'),
        ),
        migrations.AddField(
            model_name='scanstatus',
            name='last_modified',
            field=models.DateTimeField(auto_now=True, verbose_name='last modified'),
        ),
        migrations.AlterField(
            model_name='scanner',
            name='columns',
            field=models.CharField(blank=True, max_length=128, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')]),
        ),
        migrations.CreateModel(
            name='CustomRule',
            fields=[
                ('rule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='os2datascanner.rule')),
                ('_rule', models.JSONField()),
            ],
            bases=('os2datascanner.rule',),
        ),
        migrations.AddField(
            model_name='scanstatus',
            name='message',
            field=models.TextField(blank=True, verbose_name='message'),
        ),
    ]

# Generated by Django 2.2.18 on 2021-03-16 08:29

from django.db import migrations, models
from django.db.models import Q


def creating_relations_between_alias_and_matches(apps, schema_editor):
    """This migration creates the relation between
    Alias and DocumentReport, for all existing Aliases

    *Note - this method is from now on also a management command.
    See management/commands/update_match_alias_relation_table.py
    """
    DocumentReport = apps.get_model("os2datascanner_report", "DocumentReport")
    # find all matches
    matches = DocumentReport.objects.filter(
        Q(data__matches__matched=True))

    Alias = apps.get_model("os2datascanner_report", "Alias")
    EmailAlias = apps.get_model("os2datascanner_report", "EmailAlias")
    ADSIDAlias = apps.get_model("os2datascanner_report", "ADSIDAlias")

    aliases = Alias.objects.all()
    for alias in aliases:
        try:
            tm = Alias.match_relation.through

            if EmailAlias.objects.filter(pk=alias.pk):
                subAlias = EmailAlias.objects.get(pk=alias.pk)
                reports = matches.filter(data__metadata__metadata__contains = {
                    str('email-account'):str(subAlias.address)})
                tm.objects.bulk_create([tm(documentreport_id=r.pk, alias_id=alias.pk) for r in reports])

            elif ADSIDAlias.objects.filter(pk=alias.pk):
                subAlias = ADSIDAlias.objects.get(pk=alias.pk)
                reports = matches.filter(data__metadata__metadata__contains = {
                    str('filesystem-owner-sid'):str(subAlias.sid)})
                tm.objects.bulk_create([tm(documentreport_id=r.pk, alias_id=alias.pk) for r in reports])

        except:
            print("no subAlias")


class Migration(migrations.Migration):

    dependencies = [
        ('os2datascanner_report', '0028_changing_documentreport_dpo_source_type'),
    ]

    operations = [
        migrations.AddField(
            model_name='alias',
            name='match_relation',
            field=models.ManyToManyField(blank=True, to='os2datascanner_report.DocumentReport',
                                         verbose_name='Match relation', related_name='alias_relation'),
        ),
        migrations.RunPython(creating_relations_between_alias_and_matches,
                             reverse_code=migrations.RunPython.noop),
    ]

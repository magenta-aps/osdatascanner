# Generated by Django 2.2.10 on 2021-03-08 09:26

from django.apps import apps
from django.db import migrations, models
import django.db.models.deletion


# needs to work with apps.get_model() as import
from ..models.aliases.alias_model import Alias
from ..models.aliases.adsidalias_model import ADSIDAlias
from ..models.aliases.emailalias_model import EmailAlias
from ..models.aliases.webdomainalias_model import WebDomainAlias
from ..models.documentreport_model import DocumentReport
from ..models.aliasmatchrelation_model import AliasMatchRelation

from ..utils import iterate_queryset_in_batches

def create_already_existing_relations(apps, schema_editor):
    # DocumentReport = apps.get_model("os2datascanner_report", "DocumentReport")
    # Alias = apps.get_model("os2datascanner_report", "Alias")
    # ADSIDAlias = apps.get_model("os2datascanner_report", "ADSIDAlias")
    # EmailAlias = apps.get_model("os2datascanner_report", "EmailAlias")
    # WebDomainAlias = apps.get_model("os2datascanner_report", "WebDomainAlias")
    # AliasMatchRelation = apps.get_model("os2datascanner_report", "AliasMatchRelation")
    matches = DocumentReport.objects.filter(
        data__matches__matched=True)

    alias_list = Alias.objects.all()
        
    for alias in alias_list:
        sub_alias = Alias.objects.get_subclass(pk=alias.pk)
        reports = matches.filter(
            data__metadata__metadata__contains = {
                str(sub_alias.key):str(sub_alias.value)
            })
        
        for batch in iterate_queryset_in_batches(10000, reports):
            AliasMatchRelation.objects.bulk_create(
                [AliasMatchRelation(alias=alias, match=report) for report in batch])


class Migration(migrations.Migration):

    dependencies = [
        ('os2datascanner_report', '0022_documentreport_created_timestamp'),
    ]

    operations = [
        migrations.RenameField(
            model_name='adsidalias',
            old_name='sid',
            new_name='value',
        ),
        migrations.RenameField(
            model_name='emailalias',
            old_name='address',
            new_name='value',
        ),
        migrations.RenameField(
            model_name='webdomainalias',
            old_name='domain',
            new_name='value',
        ),
        migrations.CreateModel(
            name='AliasMatchRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='os2datascanner_report.Alias')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='os2datascanner_report.DocumentReport')),
            ],
            options={
                'unique_together': {('alias', 'match')},
            },
        ),
        migrations.RunPython(create_already_existing_relations,
                            reverse_code=migrations.RunPython.noop),
    ]

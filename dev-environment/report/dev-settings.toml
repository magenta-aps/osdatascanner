SECRET_KEY = "DUMMYKEY(for development)DUMMYKEY(for development)"

MEDIA_ROOT = ["*"," src", "os2datascanner", "projects", "report"]

# [mode]
DEBUG = true
SAML2_ENABLED = false

# [functionality]
HANDLE_DROPDOWN = true
ALLOW_CONTACT_MAGENTA = true

# [site]
# The URL of this site, used in links in emails and in the redirect URL for
# OAuth 2.0 services. (This value should end with a forward slash.)
SITE_URL = "http://localhost:8040/"
ALLOWED_HOSTS = []
SESSION_COOKIE_NAME = "report_sessionid"

# [installation]
OPTIONAL_APPS = [
    'debug_toolbar',
]
OPTIONAL_MIDDLEWARE = [
    'debug_toolbar.middleware.DebugToolbarMiddleware',
]

# The name of the institution, to be included in the notification signoff
NOTIFICATION_INSTITUTION = 'MAGENTA APS'

# [msgraph]
MSGRAPH_ALLOW_DELETION = true
MSGRAPH_APP_ID = ""
MSGRAPH_CLIENT_SECRET = ""

# KEYCLOAK
OIDC_RP_CLIENT_ID = "os2datascanner"
# endpoints
OIDC_OP_AUTHORIZATION_ENDPOINT = "http://localkeycloak.os2datascanner:8090/auth/realms/magenta/protocol/openid-connect/auth"
OIDC_OP_TOKEN_ENDPOINT = "http://localkeycloak.os2datascanner:8090/auth/realms/magenta/protocol/openid-connect/token"
OIDC_OP_USER_ENDPOINT = "http://localkeycloak.os2datascanner:8090/auth/realms/magenta/protocol/openid-connect/userinfo"
# signing algorithm and key
OIDC_OP_JWKS_ENDPOINT = "http://localkeycloak.os2datascanner:8090/auth/realms/magenta/protocol/openid-connect/certs"
# login and logout urls
LOGOUT_URL = "http://localkeycloak.os2datascanner:8090/auth/realms/magenta/protocol/openid-connect/logout"
# Redirect urls
LOGIN_REDIRECT_URL = "http://localhost:8040/"

# [email]
DEFAULT_FROM_EMAIL = "os2datascanner@magenta.dk"
ADMIN_EMAIL = "os2datascanner@magenta.dk"
EMAIL_HOST = 'mailhog'
EMAIL_PORT = 1025

# options for django_debug_toolbar,
# https://django-debug-toolbar.readthedocs.io/en/latest/configuration.html#debug-toolbar-config
[DEBUG_TOOLBAR_CONFIG]
SHOW_COLLAPSED = true
SHOW_TOOLBAR_CALLBACK = "os2datascanner.projects.utils.debug.debug_toolbar_callback"

[DATABASES]

    [DATABASES.default]
    ENGINE = "django_prometheus.db.backends.postgresql"
    NAME = "os2datascanner_report"
    USER = "os2datascanner_report_dev"
    PASSWORD = "os2datascanner_report_dev"
    HOST = "db"

# The full documentation can be found here: https://github.com/fangli/django-saml2-auth
[SAML2_AUTH]

# Metadata is required, choose either remote url or local file path
METADATA_AUTO_CONF_URL = 'http://idp:8080/simplesaml/saml2/idp/metadata.php'
#METADATA_LOCAL_FILE_PATH = '[The metadata configuration file path]'

# Optional settings below
DEFAULT_NEXT_URL = '/'  # Custom target redirect URL after the user get logged in. Default to /admin if not set. This setting will be overwritten if you have parameter ?next= specificed in the login URL.
CREATE_USER = false # Create a new Django user when a new user logs in. Only set this to True, if you're not going to import organizational structure.
ASSERTION_URL = 'http://localhost:8040' # Custom URL to validate incoming SAML requests against
ENTITY_ID = 'http://localhost:8040/saml2_auth/acs/' # Populates the Issuer element in authn request
NAME_ID_FORMAT = 'urn:oasis:names:tc:SAML:2.0:nameid-format:transient' # Sets the Format property of authn NameIDPolicy element
ACCEPTED_TIME_DIFF = 0
USE_JWT = false # Set this to True if you are running a Single Page Application (SPA) with Django Rest Framework (DRF), and are using JWT authentication to authorize client users
FRONTEND_URL = 'http://localhost:8040/' # Redirect URL for the client if you are using JWT auth with DRF. See explanation below
# For testing assertion signage
# Generate a self signed certificat and mount it in the container.
# Remember to set SAML2_ENABLED = true
#CERT_FILE = '/etc/ssl/certs/signing.crt'
#KEY_FILE = '/etc/ssl/certs/signing.key'
#AUTHN_REQUESTS_SIGNED = true

    [SAML2_AUTH.NEW_USER_PROFILE]
    USER_GROUPS = []  # The default group name when a new user logs in
    ACTIVE_STATUS = true  # The default active status for new users
    STAFF_STATUS = true  # The staff status for new users
    SUPERUSER_STATUS = false  # The superuser status for new users

    [SAML2_AUTH.ATTRIBUTES_MAP]
    # Change Email/UserName/FirstName/LastName to corresponding SAML2 userprofile attributes.
    email = 'email'
    username = 'username'
    first_name = 'first_name'
    last_name = 'last_name'
    sid = 'sid'


    [SAML2_AUTH.TRIGGER]
    CREATE_USER = 'os2datascanner.projects.report.reportapp.utils.get_or_create_user_aliases'
    BEFORE_LOGIN = 'os2datascanner.projects.report.reportapp.utils.get_or_create_user_aliases'

[amqp]
# Nested amqp settings are picked up by the common amqp utility module
AMQP_HOST = "queue"
AMQP_USER = "os2ds"
AMQP_PWD = "os2ds"
